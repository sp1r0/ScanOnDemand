//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 3.0.40818.0
// 
namespace CreateUser.SSBService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SSBService.ISSBService")]
    public interface ISSBService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISSBService/CreateUser", ReplyAction="http://tempuri.org/ISSBService/CreateUserResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginCreateUser(CreateUser.SSBService.CreateUserRequest request, System.AsyncCallback callback, object asyncState);
        
        CreateUser.SSBService.CreateUserResponse EndCreateUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISSBService/LookupSession", ReplyAction="http://tempuri.org/ISSBService/LookupSessionResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginLookupSession(CreateUser.SSBService.LookupSessionRequest request, System.AsyncCallback callback, object asyncState);
        
        CreateUser.SSBService.LookupSessionResponse EndLookupSession(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISSBService/UserExists", ReplyAction="http://tempuri.org/ISSBService/UserExistsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginUserExists(CreateUser.SSBService.UserExistsRequest request, System.AsyncCallback callback, object asyncState);
        
        CreateUser.SSBService.UserExistsResponse EndUserExists(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISSBService/RemoveSession", ReplyAction="http://tempuri.org/ISSBService/RemoveSessionResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRemoveSession(long sessionID, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveSession(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISSBService/CheckUser", ReplyAction="http://tempuri.org/ISSBService/CheckUserResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginCheckUser(CreateUser.SSBService.CheckUserRequest request, System.AsyncCallback callback, object asyncState);
        
        CreateUser.SSBService.CheckUserResponse EndCheckUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISSBService/LookupUsername", ReplyAction="http://tempuri.org/ISSBService/LookupUsernameResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginLookupUsername(CreateUser.SSBService.LookupUsernameRequest request, System.AsyncCallback callback, object asyncState);
        
        CreateUser.SSBService.LookupUsernameResponse EndLookupUsername(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISSBService/CreateSession", ReplyAction="http://tempuri.org/ISSBService/CreateSessionResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginCreateSession(long userID, System.AsyncCallback callback, object asyncState);
        
        long EndCreateSession(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISSBService/GetAccounts", ReplyAction="http://tempuri.org/ISSBService/GetAccountsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetAccounts(CreateUser.SSBService.GetAccountsRequest request, System.AsyncCallback callback, object asyncState);
        
        CreateUser.SSBService.GetAccountsResponse EndGetAccounts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISSBService/GetAllAccounts", ReplyAction="http://tempuri.org/ISSBService/GetAllAccountsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetAllAccounts(CreateUser.SSBService.GetAllAccountsRequest request, System.AsyncCallback callback, object asyncState);
        
        CreateUser.SSBService.GetAllAccountsResponse EndGetAllAccounts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISSBService/GetBalance", ReplyAction="http://tempuri.org/ISSBService/GetBalanceResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetBalance(long accountID, System.AsyncCallback callback, object asyncState);
        
        long EndGetBalance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISSBService/Transfer", ReplyAction="http://tempuri.org/ISSBService/TransferResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginTransfer(long FromAccount, long ToAccount, long Amount, System.AsyncCallback callback, object asyncState);
        
        void EndTransfer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISSBService/UpdateBalance", ReplyAction="http://tempuri.org/ISSBService/UpdateBalanceResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginUpdateBalance(long Account, long NewAmount, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateBalance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISSBService/CreateAccount", ReplyAction="http://tempuri.org/ISSBService/CreateAccountResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginCreateAccount(CreateUser.SSBService.CreateAccountRequest request, System.AsyncCallback callback, object asyncState);
        
        CreateUser.SSBService.CreateAccountResponse EndCreateAccount(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateUser", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string pass;
        
        public CreateUserRequest() {
        }
        
        public CreateUserRequest(string username, string email, string pass) {
            this.username = username;
            this.email = email;
            this.pass = pass;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateUserResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long CreateUserResult;
        
        public CreateUserResponse() {
        }
        
        public CreateUserResponse(long CreateUserResult) {
            this.CreateUserResult = CreateUserResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LookupSession", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LookupSessionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sessionValue;
        
        public LookupSessionRequest() {
        }
        
        public LookupSessionRequest(string sessionValue) {
            this.sessionValue = sessionValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LookupSessionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LookupSessionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long LookupSessionResult;
        
        public LookupSessionResponse() {
        }
        
        public LookupSessionResponse(long LookupSessionResult) {
            this.LookupSessionResult = LookupSessionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UserExists", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UserExistsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string username;
        
        public UserExistsRequest() {
        }
        
        public UserExistsRequest(string username) {
            this.username = username;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UserExistsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UserExistsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UserExistsResult;
        
        public UserExistsResponse() {
        }
        
        public UserExistsResponse(bool UserExistsResult) {
            this.UserExistsResult = UserExistsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckUser", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CheckUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string password;
        
        public CheckUserRequest() {
        }
        
        public CheckUserRequest(string username, string password) {
            this.username = username;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckUserResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CheckUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long CheckUserResult;
        
        public CheckUserResponse() {
        }
        
        public CheckUserResponse(long CheckUserResult) {
            this.CheckUserResult = CheckUserResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LookupUsername", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LookupUsernameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long userID;
        
        public LookupUsernameRequest() {
        }
        
        public LookupUsernameRequest(long userID) {
            this.userID = userID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LookupUsernameResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LookupUsernameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LookupUsernameResult;
        
        public LookupUsernameResponse() {
        }
        
        public LookupUsernameResponse(string LookupUsernameResult) {
            this.LookupUsernameResult = LookupUsernameResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class GetAccountsResponseGetAccountsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.Linq.XElement[] anyField;
        
        private System.Xml.Linq.XElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.Linq.XElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.Linq.XElement Any1 {
            get {
                return this.any1Field;
            }
            set {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAccounts", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAccountsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long UserID;
        
        public GetAccountsRequest() {
        }
        
        public GetAccountsRequest(long UserID) {
            this.UserID = UserID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAccountsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAccountsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CreateUser.SSBService.GetAccountsResponseGetAccountsResult GetAccountsResult;
        
        public GetAccountsResponse() {
        }
        
        public GetAccountsResponse(CreateUser.SSBService.GetAccountsResponseGetAccountsResult GetAccountsResult) {
            this.GetAccountsResult = GetAccountsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllAccounts", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllAccountsRequest {
        
        public GetAllAccountsRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllAccountsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllAccountsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public long[] GetAllAccountsResult;
        
        public GetAllAccountsResponse() {
        }
        
        public GetAllAccountsResponse(long[] GetAllAccountsResult) {
            this.GetAllAccountsResult = GetAllAccountsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateAccount", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateAccountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long userID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string accountType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string balance;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string accountLevel;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public long status;
        
        public CreateAccountRequest() {
        }
        
        public CreateAccountRequest(long userID, string accountType, string balance, string accountLevel, long status) {
            this.userID = userID;
            this.accountType = accountType;
            this.balance = balance;
            this.accountLevel = accountLevel;
            this.status = status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateAccountResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateAccountResponse {
        
        public CreateAccountResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISSBServiceChannel : CreateUser.SSBService.ISSBService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LookupSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LookupSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LookupUsernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LookupUsernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public CreateUser.SSBService.GetAccountsResponseGetAccountsResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((CreateUser.SSBService.GetAccountsResponseGetAccountsResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SSBServiceClient : System.ServiceModel.ClientBase<CreateUser.SSBService.ISSBService>, CreateUser.SSBService.ISSBService {
        
        private BeginOperationDelegate onBeginCreateUserDelegate;
        
        private EndOperationDelegate onEndCreateUserDelegate;
        
        private System.Threading.SendOrPostCallback onCreateUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginLookupSessionDelegate;
        
        private EndOperationDelegate onEndLookupSessionDelegate;
        
        private System.Threading.SendOrPostCallback onLookupSessionCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserExistsDelegate;
        
        private EndOperationDelegate onEndUserExistsDelegate;
        
        private System.Threading.SendOrPostCallback onUserExistsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveSessionDelegate;
        
        private EndOperationDelegate onEndRemoveSessionDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveSessionCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckUserDelegate;
        
        private EndOperationDelegate onEndCheckUserDelegate;
        
        private System.Threading.SendOrPostCallback onCheckUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginLookupUsernameDelegate;
        
        private EndOperationDelegate onEndLookupUsernameDelegate;
        
        private System.Threading.SendOrPostCallback onLookupUsernameCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateSessionDelegate;
        
        private EndOperationDelegate onEndCreateSessionDelegate;
        
        private System.Threading.SendOrPostCallback onCreateSessionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAccountsDelegate;
        
        private EndOperationDelegate onEndGetAccountsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAccountsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllAccountsDelegate;
        
        private EndOperationDelegate onEndGetAllAccountsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllAccountsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBalanceDelegate;
        
        private EndOperationDelegate onEndGetBalanceDelegate;
        
        private System.Threading.SendOrPostCallback onGetBalanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginTransferDelegate;
        
        private EndOperationDelegate onEndTransferDelegate;
        
        private System.Threading.SendOrPostCallback onTransferCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateBalanceDelegate;
        
        private EndOperationDelegate onEndUpdateBalanceDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateBalanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateAccountDelegate;
        
        private EndOperationDelegate onEndCreateAccountDelegate;
        
        private System.Threading.SendOrPostCallback onCreateAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SSBServiceClient() {
        }
        
        public SSBServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SSBServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SSBServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SSBServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<CreateUserCompletedEventArgs> CreateUserCompleted;
        
        public event System.EventHandler<LookupSessionCompletedEventArgs> LookupSessionCompleted;
        
        public event System.EventHandler<UserExistsCompletedEventArgs> UserExistsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveSessionCompleted;
        
        public event System.EventHandler<CheckUserCompletedEventArgs> CheckUserCompleted;
        
        public event System.EventHandler<LookupUsernameCompletedEventArgs> LookupUsernameCompleted;
        
        public event System.EventHandler<CreateSessionCompletedEventArgs> CreateSessionCompleted;
        
        public event System.EventHandler<GetAccountsCompletedEventArgs> GetAccountsCompleted;
        
        public event System.EventHandler<GetAllAccountsCompletedEventArgs> GetAllAccountsCompleted;
        
        public event System.EventHandler<GetBalanceCompletedEventArgs> GetBalanceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> TransferCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateBalanceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CreateAccountCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CreateUser.SSBService.ISSBService.BeginCreateUser(CreateUser.SSBService.CreateUserRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateUser(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginCreateUser(string username, string email, string pass, System.AsyncCallback callback, object asyncState) {
            CreateUser.SSBService.CreateUserRequest inValue = new CreateUser.SSBService.CreateUserRequest();
            inValue.username = username;
            inValue.email = email;
            inValue.pass = pass;
            return ((CreateUser.SSBService.ISSBService)(this)).BeginCreateUser(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CreateUser.SSBService.CreateUserResponse CreateUser.SSBService.ISSBService.EndCreateUser(System.IAsyncResult result) {
            return base.Channel.EndCreateUser(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private long EndCreateUser(System.IAsyncResult result) {
            CreateUser.SSBService.CreateUserResponse retVal = ((CreateUser.SSBService.ISSBService)(this)).EndCreateUser(result);
            return retVal.CreateUserResult;
        }
        
        private System.IAsyncResult OnBeginCreateUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string email = ((string)(inValues[1]));
            string pass = ((string)(inValues[2]));
            return this.BeginCreateUser(username, email, pass, callback, asyncState);
        }
        
        private object[] OnEndCreateUser(System.IAsyncResult result) {
            long retVal = this.EndCreateUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateUserCompleted(object state) {
            if ((this.CreateUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateUserCompleted(this, new CreateUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateUserAsync(string username, string email, string pass) {
            this.CreateUserAsync(username, email, pass, null);
        }
        
        public void CreateUserAsync(string username, string email, string pass, object userState) {
            if ((this.onBeginCreateUserDelegate == null)) {
                this.onBeginCreateUserDelegate = new BeginOperationDelegate(this.OnBeginCreateUser);
            }
            if ((this.onEndCreateUserDelegate == null)) {
                this.onEndCreateUserDelegate = new EndOperationDelegate(this.OnEndCreateUser);
            }
            if ((this.onCreateUserCompletedDelegate == null)) {
                this.onCreateUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateUserCompleted);
            }
            base.InvokeAsync(this.onBeginCreateUserDelegate, new object[] {
                        username,
                        email,
                        pass}, this.onEndCreateUserDelegate, this.onCreateUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CreateUser.SSBService.ISSBService.BeginLookupSession(CreateUser.SSBService.LookupSessionRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLookupSession(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginLookupSession(string sessionValue, System.AsyncCallback callback, object asyncState) {
            CreateUser.SSBService.LookupSessionRequest inValue = new CreateUser.SSBService.LookupSessionRequest();
            inValue.sessionValue = sessionValue;
            return ((CreateUser.SSBService.ISSBService)(this)).BeginLookupSession(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CreateUser.SSBService.LookupSessionResponse CreateUser.SSBService.ISSBService.EndLookupSession(System.IAsyncResult result) {
            return base.Channel.EndLookupSession(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private long EndLookupSession(System.IAsyncResult result) {
            CreateUser.SSBService.LookupSessionResponse retVal = ((CreateUser.SSBService.ISSBService)(this)).EndLookupSession(result);
            return retVal.LookupSessionResult;
        }
        
        private System.IAsyncResult OnBeginLookupSession(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionValue = ((string)(inValues[0]));
            return this.BeginLookupSession(sessionValue, callback, asyncState);
        }
        
        private object[] OnEndLookupSession(System.IAsyncResult result) {
            long retVal = this.EndLookupSession(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLookupSessionCompleted(object state) {
            if ((this.LookupSessionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LookupSessionCompleted(this, new LookupSessionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LookupSessionAsync(string sessionValue) {
            this.LookupSessionAsync(sessionValue, null);
        }
        
        public void LookupSessionAsync(string sessionValue, object userState) {
            if ((this.onBeginLookupSessionDelegate == null)) {
                this.onBeginLookupSessionDelegate = new BeginOperationDelegate(this.OnBeginLookupSession);
            }
            if ((this.onEndLookupSessionDelegate == null)) {
                this.onEndLookupSessionDelegate = new EndOperationDelegate(this.OnEndLookupSession);
            }
            if ((this.onLookupSessionCompletedDelegate == null)) {
                this.onLookupSessionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLookupSessionCompleted);
            }
            base.InvokeAsync(this.onBeginLookupSessionDelegate, new object[] {
                        sessionValue}, this.onEndLookupSessionDelegate, this.onLookupSessionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CreateUser.SSBService.ISSBService.BeginUserExists(CreateUser.SSBService.UserExistsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserExists(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginUserExists(string username, System.AsyncCallback callback, object asyncState) {
            CreateUser.SSBService.UserExistsRequest inValue = new CreateUser.SSBService.UserExistsRequest();
            inValue.username = username;
            return ((CreateUser.SSBService.ISSBService)(this)).BeginUserExists(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CreateUser.SSBService.UserExistsResponse CreateUser.SSBService.ISSBService.EndUserExists(System.IAsyncResult result) {
            return base.Channel.EndUserExists(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private bool EndUserExists(System.IAsyncResult result) {
            CreateUser.SSBService.UserExistsResponse retVal = ((CreateUser.SSBService.ISSBService)(this)).EndUserExists(result);
            return retVal.UserExistsResult;
        }
        
        private System.IAsyncResult OnBeginUserExists(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            return this.BeginUserExists(username, callback, asyncState);
        }
        
        private object[] OnEndUserExists(System.IAsyncResult result) {
            bool retVal = this.EndUserExists(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserExistsCompleted(object state) {
            if ((this.UserExistsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserExistsCompleted(this, new UserExistsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserExistsAsync(string username) {
            this.UserExistsAsync(username, null);
        }
        
        public void UserExistsAsync(string username, object userState) {
            if ((this.onBeginUserExistsDelegate == null)) {
                this.onBeginUserExistsDelegate = new BeginOperationDelegate(this.OnBeginUserExists);
            }
            if ((this.onEndUserExistsDelegate == null)) {
                this.onEndUserExistsDelegate = new EndOperationDelegate(this.OnEndUserExists);
            }
            if ((this.onUserExistsCompletedDelegate == null)) {
                this.onUserExistsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserExistsCompleted);
            }
            base.InvokeAsync(this.onBeginUserExistsDelegate, new object[] {
                        username}, this.onEndUserExistsDelegate, this.onUserExistsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CreateUser.SSBService.ISSBService.BeginRemoveSession(long sessionID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveSession(sessionID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CreateUser.SSBService.ISSBService.EndRemoveSession(System.IAsyncResult result) {
            base.Channel.EndRemoveSession(result);
        }
        
        private System.IAsyncResult OnBeginRemoveSession(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long sessionID = ((long)(inValues[0]));
            return ((CreateUser.SSBService.ISSBService)(this)).BeginRemoveSession(sessionID, callback, asyncState);
        }
        
        private object[] OnEndRemoveSession(System.IAsyncResult result) {
            ((CreateUser.SSBService.ISSBService)(this)).EndRemoveSession(result);
            return null;
        }
        
        private void OnRemoveSessionCompleted(object state) {
            if ((this.RemoveSessionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveSessionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveSessionAsync(long sessionID) {
            this.RemoveSessionAsync(sessionID, null);
        }
        
        public void RemoveSessionAsync(long sessionID, object userState) {
            if ((this.onBeginRemoveSessionDelegate == null)) {
                this.onBeginRemoveSessionDelegate = new BeginOperationDelegate(this.OnBeginRemoveSession);
            }
            if ((this.onEndRemoveSessionDelegate == null)) {
                this.onEndRemoveSessionDelegate = new EndOperationDelegate(this.OnEndRemoveSession);
            }
            if ((this.onRemoveSessionCompletedDelegate == null)) {
                this.onRemoveSessionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveSessionCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveSessionDelegate, new object[] {
                        sessionID}, this.onEndRemoveSessionDelegate, this.onRemoveSessionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CreateUser.SSBService.ISSBService.BeginCheckUser(CreateUser.SSBService.CheckUserRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckUser(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginCheckUser(string username, string password, System.AsyncCallback callback, object asyncState) {
            CreateUser.SSBService.CheckUserRequest inValue = new CreateUser.SSBService.CheckUserRequest();
            inValue.username = username;
            inValue.password = password;
            return ((CreateUser.SSBService.ISSBService)(this)).BeginCheckUser(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CreateUser.SSBService.CheckUserResponse CreateUser.SSBService.ISSBService.EndCheckUser(System.IAsyncResult result) {
            return base.Channel.EndCheckUser(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private long EndCheckUser(System.IAsyncResult result) {
            CreateUser.SSBService.CheckUserResponse retVal = ((CreateUser.SSBService.ISSBService)(this)).EndCheckUser(result);
            return retVal.CheckUserResult;
        }
        
        private System.IAsyncResult OnBeginCheckUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return this.BeginCheckUser(username, password, callback, asyncState);
        }
        
        private object[] OnEndCheckUser(System.IAsyncResult result) {
            long retVal = this.EndCheckUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckUserCompleted(object state) {
            if ((this.CheckUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckUserCompleted(this, new CheckUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckUserAsync(string username, string password) {
            this.CheckUserAsync(username, password, null);
        }
        
        public void CheckUserAsync(string username, string password, object userState) {
            if ((this.onBeginCheckUserDelegate == null)) {
                this.onBeginCheckUserDelegate = new BeginOperationDelegate(this.OnBeginCheckUser);
            }
            if ((this.onEndCheckUserDelegate == null)) {
                this.onEndCheckUserDelegate = new EndOperationDelegate(this.OnEndCheckUser);
            }
            if ((this.onCheckUserCompletedDelegate == null)) {
                this.onCheckUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckUserCompleted);
            }
            base.InvokeAsync(this.onBeginCheckUserDelegate, new object[] {
                        username,
                        password}, this.onEndCheckUserDelegate, this.onCheckUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CreateUser.SSBService.ISSBService.BeginLookupUsername(CreateUser.SSBService.LookupUsernameRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLookupUsername(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginLookupUsername(long userID, System.AsyncCallback callback, object asyncState) {
            CreateUser.SSBService.LookupUsernameRequest inValue = new CreateUser.SSBService.LookupUsernameRequest();
            inValue.userID = userID;
            return ((CreateUser.SSBService.ISSBService)(this)).BeginLookupUsername(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CreateUser.SSBService.LookupUsernameResponse CreateUser.SSBService.ISSBService.EndLookupUsername(System.IAsyncResult result) {
            return base.Channel.EndLookupUsername(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndLookupUsername(System.IAsyncResult result) {
            CreateUser.SSBService.LookupUsernameResponse retVal = ((CreateUser.SSBService.ISSBService)(this)).EndLookupUsername(result);
            return retVal.LookupUsernameResult;
        }
        
        private System.IAsyncResult OnBeginLookupUsername(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long userID = ((long)(inValues[0]));
            return this.BeginLookupUsername(userID, callback, asyncState);
        }
        
        private object[] OnEndLookupUsername(System.IAsyncResult result) {
            string retVal = this.EndLookupUsername(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLookupUsernameCompleted(object state) {
            if ((this.LookupUsernameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LookupUsernameCompleted(this, new LookupUsernameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LookupUsernameAsync(long userID) {
            this.LookupUsernameAsync(userID, null);
        }
        
        public void LookupUsernameAsync(long userID, object userState) {
            if ((this.onBeginLookupUsernameDelegate == null)) {
                this.onBeginLookupUsernameDelegate = new BeginOperationDelegate(this.OnBeginLookupUsername);
            }
            if ((this.onEndLookupUsernameDelegate == null)) {
                this.onEndLookupUsernameDelegate = new EndOperationDelegate(this.OnEndLookupUsername);
            }
            if ((this.onLookupUsernameCompletedDelegate == null)) {
                this.onLookupUsernameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLookupUsernameCompleted);
            }
            base.InvokeAsync(this.onBeginLookupUsernameDelegate, new object[] {
                        userID}, this.onEndLookupUsernameDelegate, this.onLookupUsernameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CreateUser.SSBService.ISSBService.BeginCreateSession(long userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateSession(userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        long CreateUser.SSBService.ISSBService.EndCreateSession(System.IAsyncResult result) {
            return base.Channel.EndCreateSession(result);
        }
        
        private System.IAsyncResult OnBeginCreateSession(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long userID = ((long)(inValues[0]));
            return ((CreateUser.SSBService.ISSBService)(this)).BeginCreateSession(userID, callback, asyncState);
        }
        
        private object[] OnEndCreateSession(System.IAsyncResult result) {
            long retVal = ((CreateUser.SSBService.ISSBService)(this)).EndCreateSession(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateSessionCompleted(object state) {
            if ((this.CreateSessionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateSessionCompleted(this, new CreateSessionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateSessionAsync(long userID) {
            this.CreateSessionAsync(userID, null);
        }
        
        public void CreateSessionAsync(long userID, object userState) {
            if ((this.onBeginCreateSessionDelegate == null)) {
                this.onBeginCreateSessionDelegate = new BeginOperationDelegate(this.OnBeginCreateSession);
            }
            if ((this.onEndCreateSessionDelegate == null)) {
                this.onEndCreateSessionDelegate = new EndOperationDelegate(this.OnEndCreateSession);
            }
            if ((this.onCreateSessionCompletedDelegate == null)) {
                this.onCreateSessionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateSessionCompleted);
            }
            base.InvokeAsync(this.onBeginCreateSessionDelegate, new object[] {
                        userID}, this.onEndCreateSessionDelegate, this.onCreateSessionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CreateUser.SSBService.ISSBService.BeginGetAccounts(CreateUser.SSBService.GetAccountsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAccounts(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetAccounts(long UserID, System.AsyncCallback callback, object asyncState) {
            CreateUser.SSBService.GetAccountsRequest inValue = new CreateUser.SSBService.GetAccountsRequest();
            inValue.UserID = UserID;
            return ((CreateUser.SSBService.ISSBService)(this)).BeginGetAccounts(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CreateUser.SSBService.GetAccountsResponse CreateUser.SSBService.ISSBService.EndGetAccounts(System.IAsyncResult result) {
            return base.Channel.EndGetAccounts(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private CreateUser.SSBService.GetAccountsResponseGetAccountsResult EndGetAccounts(System.IAsyncResult result) {
            CreateUser.SSBService.GetAccountsResponse retVal = ((CreateUser.SSBService.ISSBService)(this)).EndGetAccounts(result);
            return retVal.GetAccountsResult;
        }
        
        private System.IAsyncResult OnBeginGetAccounts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long UserID = ((long)(inValues[0]));
            return this.BeginGetAccounts(UserID, callback, asyncState);
        }
        
        private object[] OnEndGetAccounts(System.IAsyncResult result) {
            CreateUser.SSBService.GetAccountsResponseGetAccountsResult retVal = this.EndGetAccounts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAccountsCompleted(object state) {
            if ((this.GetAccountsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAccountsCompleted(this, new GetAccountsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAccountsAsync(long UserID) {
            this.GetAccountsAsync(UserID, null);
        }
        
        public void GetAccountsAsync(long UserID, object userState) {
            if ((this.onBeginGetAccountsDelegate == null)) {
                this.onBeginGetAccountsDelegate = new BeginOperationDelegate(this.OnBeginGetAccounts);
            }
            if ((this.onEndGetAccountsDelegate == null)) {
                this.onEndGetAccountsDelegate = new EndOperationDelegate(this.OnEndGetAccounts);
            }
            if ((this.onGetAccountsCompletedDelegate == null)) {
                this.onGetAccountsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAccountsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAccountsDelegate, new object[] {
                        UserID}, this.onEndGetAccountsDelegate, this.onGetAccountsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CreateUser.SSBService.ISSBService.BeginGetAllAccounts(CreateUser.SSBService.GetAllAccountsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllAccounts(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetAllAccounts(System.AsyncCallback callback, object asyncState) {
            CreateUser.SSBService.GetAllAccountsRequest inValue = new CreateUser.SSBService.GetAllAccountsRequest();
            return ((CreateUser.SSBService.ISSBService)(this)).BeginGetAllAccounts(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CreateUser.SSBService.GetAllAccountsResponse CreateUser.SSBService.ISSBService.EndGetAllAccounts(System.IAsyncResult result) {
            return base.Channel.EndGetAllAccounts(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private long[] EndGetAllAccounts(System.IAsyncResult result) {
            CreateUser.SSBService.GetAllAccountsResponse retVal = ((CreateUser.SSBService.ISSBService)(this)).EndGetAllAccounts(result);
            return retVal.GetAllAccountsResult;
        }
        
        private System.IAsyncResult OnBeginGetAllAccounts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllAccounts(callback, asyncState);
        }
        
        private object[] OnEndGetAllAccounts(System.IAsyncResult result) {
            long[] retVal = this.EndGetAllAccounts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllAccountsCompleted(object state) {
            if ((this.GetAllAccountsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllAccountsCompleted(this, new GetAllAccountsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllAccountsAsync() {
            this.GetAllAccountsAsync(null);
        }
        
        public void GetAllAccountsAsync(object userState) {
            if ((this.onBeginGetAllAccountsDelegate == null)) {
                this.onBeginGetAllAccountsDelegate = new BeginOperationDelegate(this.OnBeginGetAllAccounts);
            }
            if ((this.onEndGetAllAccountsDelegate == null)) {
                this.onEndGetAllAccountsDelegate = new EndOperationDelegate(this.OnEndGetAllAccounts);
            }
            if ((this.onGetAllAccountsCompletedDelegate == null)) {
                this.onGetAllAccountsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllAccountsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllAccountsDelegate, null, this.onEndGetAllAccountsDelegate, this.onGetAllAccountsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CreateUser.SSBService.ISSBService.BeginGetBalance(long accountID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBalance(accountID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        long CreateUser.SSBService.ISSBService.EndGetBalance(System.IAsyncResult result) {
            return base.Channel.EndGetBalance(result);
        }
        
        private System.IAsyncResult OnBeginGetBalance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long accountID = ((long)(inValues[0]));
            return ((CreateUser.SSBService.ISSBService)(this)).BeginGetBalance(accountID, callback, asyncState);
        }
        
        private object[] OnEndGetBalance(System.IAsyncResult result) {
            long retVal = ((CreateUser.SSBService.ISSBService)(this)).EndGetBalance(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBalanceCompleted(object state) {
            if ((this.GetBalanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBalanceCompleted(this, new GetBalanceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBalanceAsync(long accountID) {
            this.GetBalanceAsync(accountID, null);
        }
        
        public void GetBalanceAsync(long accountID, object userState) {
            if ((this.onBeginGetBalanceDelegate == null)) {
                this.onBeginGetBalanceDelegate = new BeginOperationDelegate(this.OnBeginGetBalance);
            }
            if ((this.onEndGetBalanceDelegate == null)) {
                this.onEndGetBalanceDelegate = new EndOperationDelegate(this.OnEndGetBalance);
            }
            if ((this.onGetBalanceCompletedDelegate == null)) {
                this.onGetBalanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBalanceCompleted);
            }
            base.InvokeAsync(this.onBeginGetBalanceDelegate, new object[] {
                        accountID}, this.onEndGetBalanceDelegate, this.onGetBalanceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CreateUser.SSBService.ISSBService.BeginTransfer(long FromAccount, long ToAccount, long Amount, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTransfer(FromAccount, ToAccount, Amount, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CreateUser.SSBService.ISSBService.EndTransfer(System.IAsyncResult result) {
            base.Channel.EndTransfer(result);
        }
        
        private System.IAsyncResult OnBeginTransfer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long FromAccount = ((long)(inValues[0]));
            long ToAccount = ((long)(inValues[1]));
            long Amount = ((long)(inValues[2]));
            return ((CreateUser.SSBService.ISSBService)(this)).BeginTransfer(FromAccount, ToAccount, Amount, callback, asyncState);
        }
        
        private object[] OnEndTransfer(System.IAsyncResult result) {
            ((CreateUser.SSBService.ISSBService)(this)).EndTransfer(result);
            return null;
        }
        
        private void OnTransferCompleted(object state) {
            if ((this.TransferCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TransferCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TransferAsync(long FromAccount, long ToAccount, long Amount) {
            this.TransferAsync(FromAccount, ToAccount, Amount, null);
        }
        
        public void TransferAsync(long FromAccount, long ToAccount, long Amount, object userState) {
            if ((this.onBeginTransferDelegate == null)) {
                this.onBeginTransferDelegate = new BeginOperationDelegate(this.OnBeginTransfer);
            }
            if ((this.onEndTransferDelegate == null)) {
                this.onEndTransferDelegate = new EndOperationDelegate(this.OnEndTransfer);
            }
            if ((this.onTransferCompletedDelegate == null)) {
                this.onTransferCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTransferCompleted);
            }
            base.InvokeAsync(this.onBeginTransferDelegate, new object[] {
                        FromAccount,
                        ToAccount,
                        Amount}, this.onEndTransferDelegate, this.onTransferCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CreateUser.SSBService.ISSBService.BeginUpdateBalance(long Account, long NewAmount, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateBalance(Account, NewAmount, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CreateUser.SSBService.ISSBService.EndUpdateBalance(System.IAsyncResult result) {
            base.Channel.EndUpdateBalance(result);
        }
        
        private System.IAsyncResult OnBeginUpdateBalance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long Account = ((long)(inValues[0]));
            long NewAmount = ((long)(inValues[1]));
            return ((CreateUser.SSBService.ISSBService)(this)).BeginUpdateBalance(Account, NewAmount, callback, asyncState);
        }
        
        private object[] OnEndUpdateBalance(System.IAsyncResult result) {
            ((CreateUser.SSBService.ISSBService)(this)).EndUpdateBalance(result);
            return null;
        }
        
        private void OnUpdateBalanceCompleted(object state) {
            if ((this.UpdateBalanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateBalanceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateBalanceAsync(long Account, long NewAmount) {
            this.UpdateBalanceAsync(Account, NewAmount, null);
        }
        
        public void UpdateBalanceAsync(long Account, long NewAmount, object userState) {
            if ((this.onBeginUpdateBalanceDelegate == null)) {
                this.onBeginUpdateBalanceDelegate = new BeginOperationDelegate(this.OnBeginUpdateBalance);
            }
            if ((this.onEndUpdateBalanceDelegate == null)) {
                this.onEndUpdateBalanceDelegate = new EndOperationDelegate(this.OnEndUpdateBalance);
            }
            if ((this.onUpdateBalanceCompletedDelegate == null)) {
                this.onUpdateBalanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateBalanceCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateBalanceDelegate, new object[] {
                        Account,
                        NewAmount}, this.onEndUpdateBalanceDelegate, this.onUpdateBalanceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CreateUser.SSBService.ISSBService.BeginCreateAccount(CreateUser.SSBService.CreateAccountRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateAccount(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginCreateAccount(long userID, string accountType, string balance, string accountLevel, long status, System.AsyncCallback callback, object asyncState) {
            CreateUser.SSBService.CreateAccountRequest inValue = new CreateUser.SSBService.CreateAccountRequest();
            inValue.userID = userID;
            inValue.accountType = accountType;
            inValue.balance = balance;
            inValue.accountLevel = accountLevel;
            inValue.status = status;
            return ((CreateUser.SSBService.ISSBService)(this)).BeginCreateAccount(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CreateUser.SSBService.CreateAccountResponse CreateUser.SSBService.ISSBService.EndCreateAccount(System.IAsyncResult result) {
            return base.Channel.EndCreateAccount(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndCreateAccount(System.IAsyncResult result) {
            CreateUser.SSBService.CreateAccountResponse retVal = ((CreateUser.SSBService.ISSBService)(this)).EndCreateAccount(result);
        }
        
        private System.IAsyncResult OnBeginCreateAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long userID = ((long)(inValues[0]));
            string accountType = ((string)(inValues[1]));
            string balance = ((string)(inValues[2]));
            string accountLevel = ((string)(inValues[3]));
            long status = ((long)(inValues[4]));
            return this.BeginCreateAccount(userID, accountType, balance, accountLevel, status, callback, asyncState);
        }
        
        private object[] OnEndCreateAccount(System.IAsyncResult result) {
            this.EndCreateAccount(result);
            return null;
        }
        
        private void OnCreateAccountCompleted(object state) {
            if ((this.CreateAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateAccountAsync(long userID, string accountType, string balance, string accountLevel, long status) {
            this.CreateAccountAsync(userID, accountType, balance, accountLevel, status, null);
        }
        
        public void CreateAccountAsync(long userID, string accountType, string balance, string accountLevel, long status, object userState) {
            if ((this.onBeginCreateAccountDelegate == null)) {
                this.onBeginCreateAccountDelegate = new BeginOperationDelegate(this.OnBeginCreateAccount);
            }
            if ((this.onEndCreateAccountDelegate == null)) {
                this.onEndCreateAccountDelegate = new EndOperationDelegate(this.OnEndCreateAccount);
            }
            if ((this.onCreateAccountCompletedDelegate == null)) {
                this.onCreateAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateAccountCompleted);
            }
            base.InvokeAsync(this.onBeginCreateAccountDelegate, new object[] {
                        userID,
                        accountType,
                        balance,
                        accountLevel,
                        status}, this.onEndCreateAccountDelegate, this.onCreateAccountCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override CreateUser.SSBService.ISSBService CreateChannel() {
            return new SSBServiceClientChannel(this);
        }
        
        private class SSBServiceClientChannel : ChannelBase<CreateUser.SSBService.ISSBService>, CreateUser.SSBService.ISSBService {
            
            public SSBServiceClientChannel(System.ServiceModel.ClientBase<CreateUser.SSBService.ISSBService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginCreateUser(CreateUser.SSBService.CreateUserRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("CreateUser", _args, callback, asyncState);
                return _result;
            }
            
            public CreateUser.SSBService.CreateUserResponse EndCreateUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                CreateUser.SSBService.CreateUserResponse _result = ((CreateUser.SSBService.CreateUserResponse)(base.EndInvoke("CreateUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLookupSession(CreateUser.SSBService.LookupSessionRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("LookupSession", _args, callback, asyncState);
                return _result;
            }
            
            public CreateUser.SSBService.LookupSessionResponse EndLookupSession(System.IAsyncResult result) {
                object[] _args = new object[0];
                CreateUser.SSBService.LookupSessionResponse _result = ((CreateUser.SSBService.LookupSessionResponse)(base.EndInvoke("LookupSession", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUserExists(CreateUser.SSBService.UserExistsRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("UserExists", _args, callback, asyncState);
                return _result;
            }
            
            public CreateUser.SSBService.UserExistsResponse EndUserExists(System.IAsyncResult result) {
                object[] _args = new object[0];
                CreateUser.SSBService.UserExistsResponse _result = ((CreateUser.SSBService.UserExistsResponse)(base.EndInvoke("UserExists", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveSession(long sessionID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sessionID;
                System.IAsyncResult _result = base.BeginInvoke("RemoveSession", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRemoveSession(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RemoveSession", _args, result);
            }
            
            public System.IAsyncResult BeginCheckUser(CreateUser.SSBService.CheckUserRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("CheckUser", _args, callback, asyncState);
                return _result;
            }
            
            public CreateUser.SSBService.CheckUserResponse EndCheckUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                CreateUser.SSBService.CheckUserResponse _result = ((CreateUser.SSBService.CheckUserResponse)(base.EndInvoke("CheckUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLookupUsername(CreateUser.SSBService.LookupUsernameRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("LookupUsername", _args, callback, asyncState);
                return _result;
            }
            
            public CreateUser.SSBService.LookupUsernameResponse EndLookupUsername(System.IAsyncResult result) {
                object[] _args = new object[0];
                CreateUser.SSBService.LookupUsernameResponse _result = ((CreateUser.SSBService.LookupUsernameResponse)(base.EndInvoke("LookupUsername", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateSession(long userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userID;
                System.IAsyncResult _result = base.BeginInvoke("CreateSession", _args, callback, asyncState);
                return _result;
            }
            
            public long EndCreateSession(System.IAsyncResult result) {
                object[] _args = new object[0];
                long _result = ((long)(base.EndInvoke("CreateSession", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAccounts(CreateUser.SSBService.GetAccountsRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetAccounts", _args, callback, asyncState);
                return _result;
            }
            
            public CreateUser.SSBService.GetAccountsResponse EndGetAccounts(System.IAsyncResult result) {
                object[] _args = new object[0];
                CreateUser.SSBService.GetAccountsResponse _result = ((CreateUser.SSBService.GetAccountsResponse)(base.EndInvoke("GetAccounts", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllAccounts(CreateUser.SSBService.GetAllAccountsRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetAllAccounts", _args, callback, asyncState);
                return _result;
            }
            
            public CreateUser.SSBService.GetAllAccountsResponse EndGetAllAccounts(System.IAsyncResult result) {
                object[] _args = new object[0];
                CreateUser.SSBService.GetAllAccountsResponse _result = ((CreateUser.SSBService.GetAllAccountsResponse)(base.EndInvoke("GetAllAccounts", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBalance(long accountID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = accountID;
                System.IAsyncResult _result = base.BeginInvoke("GetBalance", _args, callback, asyncState);
                return _result;
            }
            
            public long EndGetBalance(System.IAsyncResult result) {
                object[] _args = new object[0];
                long _result = ((long)(base.EndInvoke("GetBalance", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginTransfer(long FromAccount, long ToAccount, long Amount, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = FromAccount;
                _args[1] = ToAccount;
                _args[2] = Amount;
                System.IAsyncResult _result = base.BeginInvoke("Transfer", _args, callback, asyncState);
                return _result;
            }
            
            public void EndTransfer(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Transfer", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateBalance(long Account, long NewAmount, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = Account;
                _args[1] = NewAmount;
                System.IAsyncResult _result = base.BeginInvoke("UpdateBalance", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateBalance(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateBalance", _args, result);
            }
            
            public System.IAsyncResult BeginCreateAccount(CreateUser.SSBService.CreateAccountRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("CreateAccount", _args, callback, asyncState);
                return _result;
            }
            
            public CreateUser.SSBService.CreateAccountResponse EndCreateAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                CreateUser.SSBService.CreateAccountResponse _result = ((CreateUser.SSBService.CreateAccountResponse)(base.EndInvoke("CreateAccount", _args, result)));
                return _result;
            }
        }
    }
}
